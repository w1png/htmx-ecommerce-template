package admin_orders_templates

import "github.com/w1png/go-htmx-ecommerce-template/models"
import "github.com/w1png/go-htmx-ecommerce-template/templates/admin"
import "fmt"
import "github.com/w1png/go-htmx-ecommerce-template/templates/components"
import "github.com/w1png/go-htmx-ecommerce-template/templates/scripts"

templ status_color_class() {
	<span class="bg-gray-200 bg-yellow-200 bg-orange-200 bg-blue-200 bg-greeb-200 bg-red-200 hidden"></span>
}

templ delivery_type_color_class() {
	<span class="bg-blue-200 bg-green-200 bg-gray-200"></span>
}

templ IndexApi(orders []*models.Order, filter_status models.OrderStatus) {
	@admin_templates.Navbar()
	<div class="" id="order_modal_parent"></div>
	<div
		class="container mx-auto p-8 ml-16 sample-transition flex flex-col gap-4 items-center lg:items-start"
		hx-ext="response-targets"
	>
		<div
			class="w-full h-fit flex flex-row gap-4 w-full overflow-x-scroll px-2 py-3"
			hx-target="body"
			hx-swap="innerHTML transition:true"
		>
			for _, status := range append([]models.OrderStatus{models.OrderStatusAny}, models.ORDER_STATUSES_ARRAY...) {
				<span
					class={ "cursor-pointer select-none hover:scale-110 transition-transform ease-in-out duration-300", templ.KV("scale-110", status == filter_status ) }
					hx-get={ fmt.Sprintf("/admin/api/orders?status=%d", status) }
					hx-push-url={ fmt.Sprintf("/admin/orders?status=%d", status) }
				>
					@Status(status)
				</span>
			}
		</div>
		if len(orders) != 0 {
			<div class="flex flex-col overflow-scroll w-full">
				<table class="w-full">
					<thead>
						<tr class="border-b-2 mb-2 p-2 px-4 text-nowrap">
							<th>ID</th>
							<th>Способ доставки</th>
							<th>Город</th>
							<th>Итого</th>
							<th>Статус</th>
						</tr>
					</thead>
					<tbody id="order_list">
						@Orders(orders, 2, filter_status)
					</tbody>
				</table>
				<p class="text-sm text-red-400" id="pagination_error"></p>
				@components.Loading("pagination-loading")
			</div>
		} else {
			<div class="flex items-center justify-center w-full">
				<p class="text-3xl">Заказы отсутствуют</p>
			</div>
		}
	</div>
}

templ Index(orders []*models.Order, filter_status models.OrderStatus) {
	@admin_templates.Base() {
		@IndexApi(orders, filter_status)
	}
}

templ Status(status models.OrderStatus) {
	<p class={ "px-4 py-2 rounded-full text-nowrap w-fit", status.GetColorClass() }>{ status.ToString() }</p>
}

templ delivery_type(delivery_type models.DeliveryType) {
	<p class={ "px-4 py-2 rounded-full text-nowrap flex flex-row items-center justify-center w-fit gap-2 w-fit", delivery_type.GetColorClass() }><img class="w-6 h-6" src={ delivery_type.GetIconImg() }/>{ delivery_type.ToString() }</p>
}

templ Order(order *models.Order, next_page int, is_last bool, status models.OrderStatus) {
	<tr
		class="cursor-pointer hover:bg-gray-100 p-4 select-none"
		hx-get={ fmt.Sprintf("/admin/api/orders/%d/modal", order.ID) }
		hx-target="#order_modal_parent"
		hx-target-error={ fmt.Sprintf("order_error_#%d", order.ID) }
		hx-swap="innerHTML"
		hx-trigger="click"
	>
		if is_last {
			<td
				hx-get={ fmt.Sprintf("/admin/api/orders/page/%d?status=%d", next_page, status) }
				hx-target="#order_list"
				hx-target-error="#pagination_error"
				hx-trigger="revealed"
				hx-swap="beforeend"
				hx-indicator={ "pagination_loadin" }
			>
				{ fmt.Sprintf("%d", order.ID) }
			</td>
		} else {
			<td>{ fmt.Sprintf("%d", order.ID) }</td>
		}
		<td class="flex items-center justify-center">
			@delivery_type(order.DeliveryType)
		</td>
		<td>
			if order.DeliveryType == models.DeliveryTypePickup {
				{ "-" }
			} else {
				{ order.City }
			}
		</td>
		<td>
			{ fmt.Sprintf("%dруб.",order.GetTotalPrice()) }
		</td>
		<td class="flex items-center justify-center">
			@OrderStatusDropdown(order)
		</td>
	</tr>
}

templ OrderStatusDropdown(order *models.Order) {
	<span
		hx-get={ fmt.Sprintf("/admin/api/orders/%d/status", order.ID) }
		hx-trigger={ fmt.Sprintf("update_status_%d from:body", order.ID) }
		hx-target="this"
		hx-swap="outerHTML"
	>
		@components.DropDown(Status(order.Status), components.Down) {
			<div class="mt-4 flex flex-col gap-2 bg-white p-2 rounded-xl border-2">
				for _, order_status := range models.ORDER_STATUSES_ARRAY {
					if order_status != order.Status {
						<span
							class="cursor-pointer hover:scale-105 transition-transform ease-in-out duration-300"
							hx-put={ fmt.Sprintf("/admin/api/orders/%d?status=%d", order.ID, order_status) }
							hx-swap="none"
						>
							@Status(order_status)
						</span>
					}
				}
			</div>
		}
	</span>
}

templ OrderModal(order *models.Order) {
	@components.Modal("order_modal") {
		<div class="flex flex-col p-4">
			<div class="flex flex-col grow w-full">
				<div class="flex flex-row items-center justify-between h-16">
					<p><strong>Номер заказа:</strong> { fmt.Sprintf("%d", order.ID) }</p>
					@OrderStatusDropdown(order)
				</div>
				<p><strong>ФИО:</strong> { order.Name }</p>
				<p><strong>Номер телефона:</strong>+7{ order.PhoneNumber }</p>
				<div class="py-2 flex flex-col">
					@delivery_type(order.DeliveryType)
					if order.DeliveryType == models.DeliveryTypeDelivery {
						<p><strong>Адрес доставки:</strong> { order.City } { order.Adress }</p>
					}
				</div>
				<div class="max-h-[50vh] w-full overflow-scroll" hx-boost="true" hx-target="body" hx-swap="innerHTML transition:true">
					<table class="w-full">
						<thead>
							<tr class="border-b-2 mb-2 p-2 px-4 text-nowrap">
								<th>Название</th>
								<th>Кол-во</th>
								<th>Цена</th>
								<th>Цена со скидкой</th>
								<th>Итого</th>
							</tr>
						</thead>
						<tbody>
							for i, order_product := range order.Products {
								<tr class={ "hover:bg-slate-200 p-2", templ.KV("bg-slate-100", i%2 == 0) }>
									<td class="min-w-[100px]">
										<a class="" href={ templ.SafeURL(fmt.Sprintf("/products/%s", order_product.Slug)) }>
											{ order_product.Name }
										</a>
									</td>
									<td>{ fmt.Sprintf("%d", order_product.Quantity) }</td>
									<td>{ fmt.Sprintf("%d", order_product.Price) }</td>
									<td>
										if order_product.DiscountPrice != -1 {
											{ fmt.Sprintf("%d", order_product.DiscountPrice) }
										} else {
											{ fmt.Sprintf("%d", order_product.Price) }
										}
									</td>
									<td>{ fmt.Sprintf("%d", order_product.GetTotalPrice()) }</td>
								</tr>
							}
							<tr class="border-t-2">
								<td colspan="5" class="text-right">
									<strong>Итого:</strong> { fmt.Sprintf("%d", order.GetTotalPrice()) }
								</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>
	}
	@scripts.OpenModal("order_modal")
}

templ Orders(orders []*models.Order, next_page int, status models.OrderStatus) {
	for i, order := range orders {
		if len(orders) == models.ORDERS_PER_PAGE && len(orders)-1 == i && next_page != -1 {
			@Order(order, next_page, true, status)
		} else {
			@Order(order, next_page, false, status)
		}
	}
}
